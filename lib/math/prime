map<ll,ll> primefact(ll n){
    map<ll,ll> res;
    for(ll i=2; i*i<=n; i++){
        while(n%i==0){
            res[i]++;
            n/=i;
        }
    }
    if(n!=1) res[n]=1;
    return res;
}


bool is_prime[(ll)1e6];
bool is_prime_small[(ll)1e6];

VL seg_sieve(ll a, ll b) {
    VL res;
    for(ll i = 2; i * i < b; i++) is_prime_small[i] = true;
    REP(i, b - a) is_prime[i] = true;
    for(ll i = 2; i * i < b; i++) {
        if(is_prime_small[i]) {
            for(ll j = 2 * i; j * j < b; j += i) is_prime_small[j] = false;
            for(ll j = max(2LL, (a + i - 1) / i) * i; j < b; j += i)
                is_prime[j - a] = false;
        }
    }
    REP(i, b - a) if(is_prime[i]) res.emplace_back(i + a);
    return res;
}
